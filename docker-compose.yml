version: '3.8'
services:
  messenger-engine:
    image: streamware/messenger-engine
    ports:
      - "9000:9000"
      - "3002:3002"
    environment:
      - APP_PORT=3002
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    depends_on:
      - cassandra
    restart: on-failure

  auth:
    image: streamware/auth
    ports:
      - "3001:3001"
    environment:
      - MODE=prod
      - APP_PORT=3001
      - DATABASE_URL=postgresql://postgres:6jliq83an911t0h9rw34l4q73k4xvmen0jbvd2b5@postgres:5432/auth
      - ACCESS_TOKEN_EXPIRATION=31556952 # in seconds, default is 24 hours
      - REFRESH_TOKEN_EXPIRATION=31556952 # in seconds, default 1 year
      - ISSUER=http://streamware.co
      - AUDIENCE=http://streamware.co
      - AWS_S3_ENDPOINT= # it should be without http:// or https://
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - AWS_S3_AVATAR_BUCKET=
    depends_on:
      - postgres
    volumes:
      - './keys/private_key.pem:/app/keys/private_key.pem'
      - './keys/public_key.pem:/app/keys/public_key.pem'
    restart: on-failure

  notify-hub:
    image: streamware/notify-hub
    ports:
      - "3004:3004"
    environment:
      - APP_PORT=3004
      - DATABASE_URL=postgresql://postgres:6jliq83an911t0h9rw34l4q73k4xvmen0jbvd2b5@postgres:5431/notify-hub
    depends_on:
      - postgres-notify-hub
    restart: on-failure

  swift-rest-engine:
    image: streamware/swifty-rest-engine
    ports:
      - "3000:3000"
    environment:
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    depends_on:
      - cassandra
    restart: on-failure

  postgres-notify-hub:
    image: postgres:16.2-bookworm
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-notify-hub-data:/var/lib/postgresql/data
    environment:
      - NATS_JETSTREAM_SERVERS=nats:4222
      - POSTGRES_PASSWORD=6jliq83an911t0h9rw34l4q73k4xvmen0jbvd2b5
      - POSTGRES_USER=postgres
      - POSTGRES_DB=notify-hub

  nats:
    container_name: nats
    image: nats
    entrypoint: /nats-server
    command: --name nats --cluster_name JSC --js --sd /data -p 4222
    networks:
    - nats
    ports:
    - 4222:4222
    volumes:
    - ./jetstream-cluster/n1:/data

  postgres:
    image: postgres:16.2-bookworm
    ports:
      - "5431:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=6jliq83an911t0h9rw34l4q73k4xvmen0jbvd2b5
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auth

  cassandra:
    image: cassandra:4.1.0
    ports:
      - "9042:9042"
    volumes:
      - ./migrations/setup.sh:/usr/setup.sh
      - ./migrations/setup.cql:/usr/setup.cql
    entrypoint: ["/bin/bash", "-c"]
    command:
      - "chmod +x /usr/setup.sh &&
       nohup /usr/setup.sh &> /usr/setup.log &
       docker-entrypoint.sh cassandra -f"

  haproxy:
    image: haproxy:2.9-alpine
    restart: always
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - './keys/private_key.pem:/app/keys/private_key.pem'
      - './keys/public_key.pem:/app/keys/public_key.pem'
    ports:
      - "80:80"
    environment:
      - ISSUER=http://streamware.co
      - AUDIENCE=http://streamware.co
    networks:
      - default
      - proxy

networks:
  proxy:
    external: true
  nats:
    external: true
